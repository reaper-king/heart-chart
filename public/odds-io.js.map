{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/crossfilter/crossfilter.js","../../node_modules/crossfilter/index.js","../../node_modules/json-to-pivot-json/index.js","../../node_modules/svelte/store/index.mjs","../../src/components/store.js","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/buttonGroup.svelte","../../src/components/oddsCal.svelte","../../src/components/table.svelte","../../src/components/dropdown.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.43.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","(function(exports){\ncrossfilter.version = \"1.3.12\";\nfunction crossfilter_identity(d) {\n  return d;\n}\ncrossfilter.permute = permute;\n\nfunction permute(array, index) {\n  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\nvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\nbisect.by = bisect_by;\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\nvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\nheap.by = heap_by;\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\nvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\nheapselect.by = heapselect_by;\n\nfunction heapselect_by(f) {\n  var heap = heap_by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        x,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (x = f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\nvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\ninsertionsort.by = insertionsort_by;\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\nvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\nquicksort.by = quicksort_by;\n\nfunction quicksort_by(f) {\n  var insertionsort = insertionsort_by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\nvar crossfilter_array8 = crossfilter_arrayUntyped,\n    crossfilter_array16 = crossfilter_arrayUntyped,\n    crossfilter_array32 = crossfilter_arrayUntyped,\n    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\nif (typeof Uint8Array !== \"undefined\") {\n  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\nfunction crossfilter_null() {\n  return null;\n}\nfunction crossfilter_zero() {\n  return 0;\n}\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\nexports.crossfilter = crossfilter;\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      m = 0, // a bit mask representing which dimensions are in use\n      M = 8, // number of dimensions that can fit in `filters`\n      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = []; // when data is removed\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters = crossfilter_arrayLengthen(filters, n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters.\n  function removeData() {\n    var newIndex = crossfilter_index(n, n),\n        removed = [];\n    for (var i = 0, j = 0; i < n; ++i) {\n      if (filters[i]) newIndex[i] = j++;\n      else removed.push(i);\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(0, [], removed); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var i = 0, j = 0, k; i < n; ++i) {\n      if (k = filters[i]) {\n        if (i !== j) filters[j] = k, data[j] = data[i];\n        ++j;\n      }\n    }\n    data.length = j;\n    while (n > j) filters[--n] = 0;\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value) {\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n        zero = ~one, // inverted one, e.g., 11110111\n        values, // sorted, cached array\n        index, // value rank ↦ object id\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        sort = quicksort_by(function(i) { return newValues[i]; }),\n        refilter = crossfilter_filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Incorporate any existing data into this dimension, and make sure that the\n    // filter bitset is wide enough to handle the new dimension.\n    m |= one;\n    if (M >= 32 ? !one : m & -(1 << M)) {\n      filters = crossfilter_arrayWiden(filters, M <<= 1);\n    }\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      // Permute new values into natural order using a sorted index.\n      newValues = newData.map(value);\n      newIndex = sort(crossfilter_range(n1), 0, n1);\n      newValues = permute(newValues, newIndex);\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n      if (refilterFunction) {\n        for (i = 0; i < n1; ++i) {\n          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n        }\n      } else {\n        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n      var oldValues = values,\n          oldIndex = index,\n          i0 = 0,\n          i1 = 0;\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = new Array(n);\n      index = crossfilter_index(n, n);\n\n      // Merge the old and new sorted values, and old and new index.\n      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[i] = oldValues[i0];\n          index[i] = oldIndex[i0++];\n        } else {\n          values[i] = newValues[i1];\n          index[i] = newIndex[i1++] + n0;\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++i) {\n        values[i] = oldValues[i0];\n        index[i] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++i) {\n        values[i] = newValues[i1];\n        index[i] = newIndex[i1] + n0;\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      for (var i = 0, j = 0, k; i < n; ++i) {\n        if (filters[k = index[i]]) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[k];\n          ++j;\n        }\n      }\n      values.length = j;\n      while (j < n) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [];\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      refilter = crossfilter_filterAll;\n\n      filterIndexFunction(refilterFunction = f);\n\n      lo0 = 0;\n      hi0 = n;\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [];\n\n      for (i = 0; i < n; ++i) {\n        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n          if (x) filters[k] &= zero, added.push(k);\n          else filters[k] |= one, removed.push(k);\n        }\n      }\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k) {\n      var array = [],\n          i = hi0,\n          j;\n\n      while (--i >= lo0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k) {\n      var array = [],\n          i = lo0,\n          j;\n\n      while (i < hi0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n        var oldGroups = groups,\n            reIndex = crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            if (g0 = oldGroups[++i0]) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n          while (!(x1 > x)) {\n            groupIndex[j = newIndex[i1] + n0] = k;\n            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater than all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n          groupIndex[i0] = reIndex[groupIndex[i0]];\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if (++k === groupCapacity) {\n            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData() {\n        if (k > 1) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK);\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          for (var i = 0, j = 0; i < n; ++i) {\n            if (filters[i]) {\n              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n              ++j;\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1) {\n            // Reindex the group index using seenGroups to find the new index.\n            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var i = 0; i < n; ++i) if (filters[i]) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      function updateMany(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g;\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      function updateOne(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = heapselect_by(valueOf);\n        heap = heap_by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      m &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = n0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, added, removed) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (!filters[k = added[i]]) {\n          reduceValue = reduceAdd(reduceValue, data[k]);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters[k = removed[i]] === filterOne) {\n          reduceValue = reduceRemove(reduceValue, data[k]);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      for (i = 0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? crossfilter_array8 : m < 0x10001\n      ? crossfilter_array16\n      : crossfilter_array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n})(typeof exports !== 'undefined' && exports || this);\n","module.exports = require(\"./crossfilter\").crossfilter;\n","var crossfilter = require(\"crossfilter\"); \n\nvar jsonToPivotjson = function (data, options) {\n\t\t\t\n\tvar ndx = crossfilter(data); \n\n\tvar pivotCol = options.column\n\tvar pivotVal = options.value;\n\tvar pivotRow = options.row; \n\n\tvar out = []; \n\n\tvar pivotRowDimension = ndx.dimension(function(d){\n\t\treturn d[pivotRow];\n\t});\n\n\tvar pivotColDimension = ndx.dimension(function(d){\n\t\treturn d[pivotCol];\n\t});\n\n\tvar totalByPivotRow = pivotRowDimension.group().reduceSum(function(d){ \t\t\n\t\treturn d[pivotVal]\n\t});\n\n\tvar allRecs = totalByPivotRow.all();\n\n\tallRecs.forEach(function(rec){\n\t\t\n\t\tpivotRowDimension.filter();\n\t\tpivotRowDimension.filter(rec.key);\n\t\t\n\t\tvar totalByPivotCol = pivotColDimension.group().reduceSum(function(d){ \t\t\n\t\t\treturn d[pivotVal]\n\t\t});\n\n\t\tvar data = totalByPivotCol.all(); \n\t\t\n\t\tvar doc = {}; \n\t\t\n\t\tdoc[pivotRow] = rec.key; \n\t\t\n\t\tdata.forEach(function(d){\n\t\t\tdoc[d.key] = d.value; \n\t\t});\n\t\t\n\t\tout.push(doc);\n\t});\n\n\treturn out;\n}\n\n\nmodule.exports = jsonToPivotjson;","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n\r\nexport const race = writable([]);\r\n\r\nexport const currentRace = writable(0);\r\n\r\nexport const oddsCal = writable(0);\r\n\r\nexport const calDate = writable(0);","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\r\n    \r\n  import { race ,currentRace  } from './store'\r\nfunction setRace(raceNo){\r\n    currentRace.set(raceNo)\r\n}\r\n    \r\n</script>\r\n<div class=\"bGroup flex relative items-center justify-center mb-4\">\r\n    \r\n    {#each $race as item}\r\n    {#if $race[0] == item }\r\n\r\n    <button\r\n    class=\"{$currentRace == item ? 'active' : ''} numB text-white hover:bg-green-300 hover:text-green-900 focus:bg-green-300 focus:text-green-900 font-bold uppercase text-xs px-6 py-3 outline-none focus:outline-none mb-1 ease-linear rounded-l transition-all duration-150\"\r\n    type=\"button\"\r\n    on:click={setRace(item)}>\r\n    {item}\r\n\r\n    </button>\r\n    {:else if  $race.at(-1) == item}\r\n    \r\n   \r\n    <button\r\n    class=\"{$currentRace == item ? 'active' : ''} numB text-white hover:bg-green-300 hover:text-green-900 focus:bg-green-300 focus:text-green-900 font-bold uppercase text-xs px-6 py-3 outline-none focus:outline-none mb-1 ease-linear rounded-r transition-all duration-150\"\r\n    type=\"button\"\r\n    on:click={setRace(item)}>\r\n    {item}\r\n\r\n    </button>\r\n\r\n  {:else if $race.length == 1}\r\n    \r\n    <button\r\n    class=\"{$currentRace == item ? 'active' : ''} numB text-white hover:bg-green-300 hover:text-green-900 focus:bg-green-300 focus:text-green-900 font-bold uppercase text-xs px-6 py-3 outline-none focus:outline-none mb-1 ease-linear rounded transition-all duration-150\"\r\n    type=\"button\"\r\n    on:click={setRace(item)}>\r\n    {item}\r\n\r\n    </button>\r\n\r\n    {:else}\r\n\r\n    <button\r\n        class=\"{$currentRace == item ? 'active' : ''} numB text-white hover:bg-green-300 active:bg-green-300 hover:text-green-900  focus:text-green-900 focus:bg-green-300 font-bold uppercase text-xs px-6 py-3 outline-none focus:outline-none mb-1 ease-linear transition-all duration-150\"\r\n        type=\"button\"\r\n        on:click={setRace(item)}>\r\n        {item}\r\n\r\n    </button>\r\n\r\n    {/if}\r\n    \r\n    {/each}\r\n  </div>\r\n\r\n\r\n  \r\n <style>\r\n\r\n  .active {\r\n  background-image: linear-gradient(#409C2C 95%, rgb(188, 247, 105) 10%);\r\n    }\r\n  \r\n    \r\n  \r\n  \r\n  </style>\r\n  ","<script>\r\n    \r\n  import { oddsCal } from './store'\r\n    \r\n</script>\r\n<div class=\"bGroup2 flex relative items-center justify-center mb-4\">\r\n\r\n    <button\r\n    class=\"{$oddsCal == false ? 'active' : ''} numB text-white hover:bg-green-300 hover:text-green-900 focus:bg-green-300 focus:text-green-900 font-bold uppercase text-xs px-4 py-2 outline-none focus:outline-none mb-1 ease-linear rounded-l transition-all duration-150\"\r\n    type=\"button\"\r\n    on:click={()=> oddsCal.set(false)}>\r\n    f100\r\n\r\n    </button>\r\n    <button\r\n    class=\"{$oddsCal == true ? 'active' : ''} numB text-white hover:bg-green-300 hover:text-green-900 focus:bg-green-300 focus:text-green-900 font-bold uppercase text-xs px-4 py-2 outline-none focus:outline-none mb-1 ease-linear rounded-r transition-all duration-150\"\r\n    type=\"button\"\r\n    on:click={()=> oddsCal.set(true)}>\r\n    f500\r\n    </button>\r\n</div>\r\n\r\n\r\n  \r\n <style>\r\n\r\n  .active {\r\n  background-image: linear-gradient(#409C2C 95%, rgb(188, 247, 105) 10%);\r\n    }\r\n  \r\n    \r\n  \r\n  \r\n  </style>\r\n  ","<script>\r\n        import jsonToPivotjson from \"json-to-pivot-json\";\r\n  import { race ,currentRace ,oddsCal } from './store'\r\n\timport { fade ,blur ,slide} from 'svelte/transition';\r\n\r\n    import ButtonGroup from \"./buttonGroup.svelte\";\r\n    import OddsCal from \"./oddsCal.svelte\";\r\n    // let output\r\n\texport let tableData = [];\r\n\r\n    export let raceNum ;\r\n    export let startTime ;\r\n    // export let raceName ;\r\n\r\n    var options = {\r\n    row: \"horse_no\", \r\n    column: \"bookmaker\", \r\n    value: \"amount\"\r\n};\r\n\r\n$: output = jsonToPivotjson(tableData, options); \r\n\r\nconsole.log(tableData)\r\n function horse(hrs_no) {\r\n\r\n    let hrs =  tableData[tableData.map(function (x) { return x.horse_no; }).indexOf(hrs_no)].horse;\r\n    return hrs\r\n     \r\n     }\r\n     function jockey(hrs_no) {\r\n\r\nlet jock =  tableData[tableData.map(function (x) { return x.horse_no; }).indexOf(hrs_no)].jockey;\r\n\r\nlet wght =  tableData[tableData.map(function (x) { return x.horse_no; }).indexOf(hrs_no)].weight;\r\nreturn jock+ \" (\" + wght + \"kg)\"\r\n \r\n }\r\n</script>\r\n\r\n<!-- <div> class=\" overflow-x-auto\"> -->\r\n    \r\n    <div class=\"min-w-screen min-h-screen bg-gray-100 flex items-start justify-center bg-gray-100 font-sans overflow-hidden\">\r\n        \r\n        <div class=\"relative w-full lg:w-5/6\">\r\n            <ButtonGroup></ButtonGroup> \r\n            <OddsCal></OddsCal>\r\n            <!-- <div class=\"head\">Race: {raceNum}  {startTime}</div> -->\r\n            <div class=\"bg-white shadow-lg rounded my-6\">\r\n                <table class=\"min-w-max w-full table-auto\"  >\r\n                    <caption class=\"relative bg-gray-200 text-gray-600 head\" ><span class=\"capleft\" in:blur> Race: {raceNum}</span > &nbsp; <span class=\"caprght\" in:blur>{startTime}</span></caption>\r\n\t<thead>\r\n\t\t\r\n        <tr class=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\r\n\t\t\t{#each Object.keys(output[0]) as columnHeading , i}\r\n            \r\n            {#if i == 0}\r\n            <th class=\"py-3 px-6 text-center\" in:blur> Horse</th>\r\n            {:else}\r\n\r\n            <th class=\"py-3 px-6 text-center\" in:blur> {columnHeading}</th>\r\n            {/if}\r\n\t\t\t{/each}\r\n\t\t<tr/>\r\n\t</thead>\r\n    <tbody class=\"text-gray-600 text-sm font-light\">\r\n\t\t{#each Object.values(output) as row}\r\n\t\t\t\r\n        <tr class=\"border-b border-gray-200 hover:bg-gray-100\">\r\n           \r\n\t\t\t\t{#each Object.values(row) as cell,i}\r\n                \r\n                {#if i == 0}\r\n                <th class=\" relative py-3 px-6 text-left whitespace-nowrap drop-shadow-lg\">\r\n                    <div class=\"flex items-center\">\r\n                        <div class=\"mr-2\" in:blur>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"600.000000pt\" height=\"382.000000pt\" viewBox=\"0 0 600.000000 382.000000\" preserveAspectRatio=\"xMidYMid meet\" class=\"logo\">\r\n                                <metadata>\r\n                                </metadata>\r\n                                <g transform=\"translate(0.000000,382.000000) scale(0.100000,-0.100000)\" stroke=\"none\" fill='#409C2C'>\r\n                                <path  d=\"M2955 3536 c-37 -17 -70 -52 -84 -89 -7 -18 -11 -138 -11 -323 l0 -294 573 0 c621 0 625 -1 728 -56 114 -62 217 -203 254 -349 19 -77 19 -194 -1 -264 -18 -64 -43 -104 -51 -82 -17 44 -94 119 -157 151 l-69 35 -426 5 c-413 5 -428 6 -491 28 -182 65 -286 187 -345 407 -13 48 -14 43 -14 -110 l-1 -159 215 -216 214 -215 8 35 9 35 253 3 c209 2 252 0 248 -11 -3 -7 -28 -96 -57 -198 -28 -101 -58 -206 -65 -232 -8 -26 -11 -45 -6 -43 4 3 41 -28 81 -69 l74 -74 -105 -4 c-57 -1 14 -4 159 -5 291 -2 359 6 445 56 55 32 138 110 168 158 12 20 32 37 47 40 101 23 226 56 276 74 90 31 89 32 81 -52 -16 -175 -72 -353 -145 -465 -22 -34 -77 -96 -122 -138 -63 -60 -102 -87 -182 -125 -55 -27 -123 -54 -149 -61 -26 -6 -46 -14 -43 -16 2 -2 23 1 46 7 31 8 45 8 55 0 10 -8 22 -7 47 6 18 9 42 18 53 20 19 2 1353 742 1384 767 24 20 51 90 51 135 0 51 -19 99 -52 129 -21 20 -752 433 -765 433 -3 0 -40 -32 -82 -72 -145 -135 -333 -271 -539 -388 -97 -55 -129 -61 -71 -13 47 39 216 190 327 292 52 47 127 124 168 170 l74 84 -193 106 c-105 59 -489 273 -852 476 -363 203 -704 393 -757 423 -105 58 -156 70 -203 48z m1675 -956 c80 -80 160 -195 160 -230 0 -22 -125 -144 -139 -136 -6 4 -11 24 -11 45 0 102 -71 286 -155 399 -25 34 -45 64 -45 67 0 17 119 -73 190 -145z m495 -346 l7 -60 -125 -82 c-254 -167 -528 -277 -784 -317 -66 -10 -52 9 30 40 139 54 402 190 534 277 79 53 170 124 225 177 l93 89 7 -31 c4 -18 10 -59 13 -93z m-100 -276 c22 -86 27 -80 -123 -138 -204 -79 -458 -128 -770 -150 -189 -12 -352 -13 -352 -1 0 5 35 12 78 16 127 11 350 44 463 70 220 49 481 152 634 249 22 14 43 26 46 26 4 0 15 -32 24 -72z\"/>\r\n                                </g>\r\n                                </svg>\r\n                        </div>\r\n                        <div class=\"flex flex-col\">\r\n                           \r\n                            <span class=\"font-medium\" in:blur>  {cell}. {horse(cell)}</span>\r\n                            <span class=\"font-black text-xs\tmx-4\" in:blur>{jockey(cell)}</span>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </th>\r\n                {:else}\r\n                <td class=\"py-3 px-6 text-right whitespace-nowrap \">\r\n                    <div class=\"block items-center\">\r\n                        <span class=\"font-medium \" in:blur>\r\n                            {#if $oddsCal == true}\r\n\r\n                            {#if cell == 0 }\r\n                                 {cell}\r\n                            {:else}\r\n                            {(100/(cell/500)).toFixed(2)}\r\n                            {/if}\r\n\r\n                            {:else}\r\n\r\n                            {cell}\r\n\r\n                            {/if}    \r\n\r\n                            <!-- 100/(950/500) -->\r\n                        \r\n                        </span>\r\n                    </div>\r\n                </td>\r\n                {/if} \r\n\r\n\t\t\t\t{/each}\r\n\t\t\t</tr>\r\n\t\t{/each}\r\n\t</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<style>\r\n\r\n/* table::after {\r\n  content: \"\";\r\n  background:  url('/isd-logo.png'); \r\n  opacity: 0.5;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  position: absolute;\r\n  z-index: 1;   \r\n} */\r\ntable{\r\n  position: relative;\r\n  background:   url(\"data:image/svg+xml,%3C%3Fxml version='1.0' standalone='no'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 20010904//EN' 'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'%3E%3Csvg version='1.0' xmlns='http://www.w3.org/2000/svg' width='600.000000pt' height='382.000000pt' viewBox='0 0 600.000000 382.000000' preserveAspectRatio='xMidYMid meet'%3E%3Cmetadata%3E%0ACreated by potrace 1.16, written by Peter Selinger 2001-2019%0A%3C/metadata%3E%3Cg transform='translate(0.000000,382.000000) scale(0.100000,-0.100000)'%0Afill='%23409C2C' fill-opacity='0.08' stroke='none'%3E%3Cpath d='M0 1910 l0 -1910 3000 0 3000 0 0 1910 0 1910 -3000 0 -3000 0 0%0A-1910z m592 1750 c273 -84 408 -377 243 -529 -152 -140 -472 -66 -605 140 -76%0A118 -76 236 1 323 74 83 219 110 361 66z m-48 -814 c83 -41 176 -132 218 -213%0A58 -112 61 -137 59 -463 -2 -439 20 -627 96 -825 54 -142 96 -207 159 -245%0A120 -72 286 -108 418 -89 214 30 475 109 570 173 105 70 156 180 141 299 -16%0A125 -138 412 -262 618 -36 61 -63 112 -61 114 6 6 254 -162 323 -218 86 -70%0A300 -293 367 -381 183 -244 223 -381 147 -501 -66 -104 -290 -178 -619 -206%0A-156 -13 -469 -7 -670 11 -178 17 -347 65 -525 150 -256 121 -402 260 -550%0A519 -159 277 -246 638 -233 967 4 102 7 118 37 179 24 49 45 76 78 98 59 43%0A75 47 169 43 65 -2 93 -8 138 -30z m2106 8 c105 -13 275 -18 765 -23 627 -6%0A630 -6 687 -29 203 -82 337 -305 326 -542 -3 -63 -11 -99 -29 -140 l-25 -54%0A-32 46 c-43 63 -105 114 -171 140 -55 23 -61 23 -432 20 -416 -3 -463 2 -587%0A60 -135 63 -243 216 -280 396 l-17 82 -65 -6 c-421 -37 -763 -128 -885 -235%0A-81 -71 -114 -172 -95 -291 19 -124 135 -394 254 -592 36 -59 66 -112 66 -117%0A0 -12 -241 150 -335 226 -77 61 -287 280 -359 374 -63 81 -145 215 -162 264%0A-8 22 -14 71 -14 109 0 111 40 168 153 222 102 48 284 90 472 110 95 10 636%0A-4 765 -20z m2656 -11 c-3 -21 -16 -107 -28 -190 -13 -84 -26 -153 -31 -153%0A-4 0 -19 12 -32 28 l-24 27 -16 -23 c-97 -136 -299 -315 -515 -457 -128 -84%0A-290 -178 -296 -172 -2 2 60 59 138 128 301 263 480 460 539 594 l21 47 -48%0A49 c-26 27 -45 51 -42 55 8 7 307 102 327 103 10 1 12 -8 7 -36z m-654 -282%0Ac58 -64 138 -185 138 -209 0 -7 -30 -42 -67 -79 -72 -71 -81 -70 -82 3 -1 45%0A-47 196 -77 257 -15 29 -45 79 -68 112 -23 33 -46 66 -51 74 -20 34 152 -98%0A207 -158z m469 -296 c7 -47 10 -87 8 -89 -2 -2 -56 -39 -119 -81 -210 -140%0A-483 -257 -700 -300 -47 -9 -93 -19 -102 -21 -10 -3 -18 -1 -18 3 0 5 37 24%0A83 43 146 59 394 190 519 273 69 46 161 119 212 169 50 48 94 87 97 88 4 0 13%0A-38 20 -85z m-1321 -199 c0 -8 -36 -140 -79 -293 -44 -153 -83 -290 -86 -305%0Al-7 -28 280 0 c252 0 286 2 345 20 84 26 175 93 230 169 l42 59 95 22 c52 12%0A137 36 188 52 52 16 96 28 98 25 2 -2 0 -48 -6 -102 -40 -353 -215 -607 -496%0A-719 -178 -71 -155 -69 -831 -73 l-612 -4 9 28 c5 15 82 276 170 578 88 303%0A163 558 166 568 5 16 26 17 250 17 204 0 244 -2 244 -14z m1224 -101 c9 -35%0A16 -68 16 -73 0 -14 -144 -76 -255 -111 -205 -63 -426 -97 -737 -111 -257 -12%0A-268 -12 -268 0 0 6 19 10 43 10 72 0 284 29 439 60 250 50 523 152 678 254%0A30 19 58 36 61 36 4 0 14 -29 23 -65z m-1944 -1251 l0 -44 -85 0 -85 0 0 -230%0A0 -230 -50 0 -50 0 0 230 0 230 -85 0 -85 0 0 45 0 44 108 3 c59 2 158 2 220%0A0 l112 -3 0 -45z m-2680 -229 l0 -275 -50 0 -50 0 0 275 0 275 50 0 50 0 0%0A-275z m426 260 c27 -8 58 -20 68 -28 18 -13 18 -15 -3 -55 -12 -23 -23 -42%0A-25 -42 -2 0 -23 9 -47 19 -95 41 -180 33 -187 -18 -6 -36 24 -58 124 -91 123%0A-41 154 -73 154 -160 0 -52 -4 -64 -30 -94 -45 -50 -103 -70 -192 -64 -72 5%0A-136 28 -187 67 l-23 18 21 41 c12 23 24 42 26 42 3 0 23 -12 44 -26 104 -68%0A231 -62 231 11 0 33 -28 52 -125 85 -100 34 -140 65 -156 122 -19 74 15 139%0A91 172 45 20 152 20 216 1z m533 -15 c145 -81 107 -314 -57 -349 -29 -6 -84%0A-11 -122 -11 l-70 0 0 -80 0 -80 -50 0 -50 0 0 276 0 276 153 -4 c140 -3 155%0A-5 196 -28z m559 -5 c91 -50 142 -135 142 -239 0 -108 -48 -190 -141 -241 -49%0A-27 -62 -30 -149 -30 -78 0 -102 4 -135 22 -62 32 -121 103 -139 164 -33 109%0A-10 198 68 275 68 66 118 84 221 81 66 -3 90 -8 133 -32z m548 20 c84 -25 124%0A-82 124 -177 0 -64 -31 -132 -71 -155 -16 -10 -29 -20 -29 -23 0 -4 25 -42 55%0A-85 30 -44 55 -83 55 -88 0 -4 -26 -7 -57 -5 l-57 3 -46 77 -45 78 -72 0 -73%0A0 0 -80 0 -80 -50 0 -50 0 0 275 0 275 133 0 c89 0 150 -5 183 -15z m1006 -1%0Ac25 -8 65 -31 88 -51 119 -102 122 -309 6 -411 -65 -57 -96 -65 -263 -70%0Al-153 -4 0 276 0 276 138 0 c99 0 151 -4 184 -16z m641 -252 c64 -148 117%0A-272 117 -275 0 -4 -24 -7 -53 -7 l-54 0 -24 60 -24 61 -133 -3 -134 -3 -23%0A-55 -23 -55 -52 -3 c-47 -3 -52 -1 -48 15 3 10 56 134 119 276 l114 257 50 0%0A51 0 117 -268z m507 223 l0 -45 -85 0 -85 0 0 -230 0 -230 -50 0 -50 0 0 230%0A0 230 -85 0 -85 0 0 45 0 45 220 0 220 0 0 -45z m396 -220 c62 -143 114 -266%0A114 -272 0 -9 -17 -13 -50 -13 l-51 0 -26 60 -26 60 -132 0 -132 0 -24 -60%0A-24 -60 -52 0 c-29 0 -53 2 -53 5 0 5 228 524 236 537 3 5 28 8 56 6 l51 -3%0A113 -260z'/%3E%3Cpath d='M1110 565 l0 -105 53 0 c126 1 187 35 187 103 0 71 -57 107 -170 107%0Al-70 0 0 -105z'/%3E%3Cpath d='M1692 649 c-140 -70 -140 -260 1 -328 98 -48 208 -4 252 101 20 49%0A19 84 -4 133 -22 48 -54 79 -103 100 -51 21 -95 19 -146 -6z'/%3E%3Cpath d='M2250 564 l0 -107 83 5 c45 3 94 11 108 18 50 23 68 94 36 144 -21%0A31 -71 46 -159 46 l-68 0 0 -106z'/%3E%3Cpath d='M3250 486 l0 -186 73 0 c77 1 136 17 169 47 65 59 77 178 24 247 -40%0A53 -78 69 -178 74 l-88 4 0 -186z'/%3E%3Cpath d='M3937 623 c-7 -11 -87 -195 -87 -200 0 -2 41 -3 90 -3 50 0 90 4 90%0A8 0 8 -79 194 -85 200 -2 2 -5 -1 -8 -5z'/%3E%3Cpath d='M4798 529 l-46 -109 94 0 93 0 -45 107 c-24 59 -45 108 -47 109 -1 1%0A-23 -47 -49 -107z'/%3E%3C/g%3E%3C/svg%3E%0A\") no-repeat center center fixed;\r\n  background-size: cover;\r\n  z-index: 100;\r\n}\r\n\r\n/* \r\ntable:before {\r\n  content: \"\";\r\n  background:   url('/isd-logo (1).svg') no-repeat center center fixed;\r\n  background-size: 100% 120%;\r\n\r\n    opacity: 0.1; \r\n  top: 6.5%;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  position: relative;\r\n  z-index: 1;   \r\n} */\r\n\r\n.logo {\r\n  /* position:relative; */\r\n  left:0;\r\n  width: 80px;\r\n  height: 34px;\r\n  transition: all 0.3s;\r\n  transform-origin: 50% 50%;\r\n}\r\n\r\n.head {\r\n        color: #636363;\r\n        font-size: 17px;\r\n    font-weight: 500;\r\n}\r\n.caprght{\r\n    position: absolute;\r\n    left:10%;\r\n}\r\n\r\n.capleft{\r\n    position: absolute;\r\n    left:2%;\r\n}\r\n</style>","<script>\r\n\r\n    import { calDate } from './store';\r\nlet rd_options;\r\nlet selected;\r\nconst getData = async () => {\r\n\t\tconst response  = await fetch('https://utxnaxbctngt41y-gra.adb.uk-london-1.oraclecloudapps.com/ords/gra/races/rd',\r\n\t\t{\r\n  headers: {\r\n    'APP_USER': 'AJAY'\r\n  }\r\n});\r\n\r\n    let tData = await response.json();\r\n     rd_options = tData.items;\r\n     selected = rd_options[0].r\r\n\r\n    };\r\n\r\n  getData()\r\n\r\n$: calDate.set(selected)   \r\n\r\n</script>\r\n<div id=\"ddown\" class=\"absolute bGroup3\">\r\n<select bind:value={selected} on:change=\"{() => calDate.set(selected)}\"  class=\"relative block appearance-none  bg-green-100 border border-green-500 hover:border-green-700 px-4 py-3 pr-4 rounded shadow leading-tight focus:outline-none focus:shadow-outline\">\r\n    {#if rd_options}\r\n   {#each rd_options as opt}  \r\n   <option value={opt.r}>{opt.race_date}</option>\r\n   {/each}\r\n   {:else}\r\n    \r\n   <option value=\"\">No Meetings</option>\r\n    {/if}\r\n</select>\r\n</div>\r\n<style>\r\n\r\n</style>","<script ang=\"ts\" >\n  import Table from \"./components/table.svelte\";\n  import { race ,currentRace ,calDate } from './components/store'\n  import Dropdown from './components/dropdown.svelte'\nlet calendarDate =0;\n\ncalDate.subscribe(value=> \n{calendarDate = value}\n) ;\n\nlet input\nlet output\nasync function getData() {\n  const response = await fetch(`https://utxnaxbctngt41y-gra.adb.uk-london-1.oraclecloudapps.com/ords/gra/races/odds?meet=${calendarDate}`);\n  let tData = await response.json();\n  input= tData.items;\n  race.set(input.map((rc,i)=>{\n      return rc['race_no']\n\n  }))\n\n  race.subscribe(value => {\n\t\tcurrentRace.set(value[0]);\n\t});\n  \n\n}\nlet dd = false\n$: if(calendarDate !== 0 && calendarDate !== undefined){\n    getData(calendarDate) ;  \n    console.log(calendarDate);\n  }\n  $: console.log(input);\n</script>\n\n<svelte:head>\n  <link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\">\n  <style>\n    .bGroup{top:0%;left:50%;transform:translate(-50%,140%);z-index:1}.bGroup2{top:50%;left:89%;transform:translate(0%,20%);z-index:1;max-width:200px}.bGroup3{top:5%;left:11%;transform:translate(0%,0%);z-index:1;max-width:200px;z-index:2}.numB{background-color:#409C2C}table.svelte-1fea0lf{position:relative;background:url(\"data:image/svg+xml,%3C%3Fxml version='1.0' standalone='no'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 20010904//EN' 'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'%3E%3Csvg version='1.0' xmlns='http://www.w3.org/2000/svg' width='600.000000pt' height='382.000000pt' viewBox='0 0 600.000000 382.000000' preserveAspectRatio='xMidYMid meet'%3E%3Cmetadata%3E%0ACreated by potrace 1.16, written by Peter Selinger 2001-2019%0A%3C/metadata%3E%3Cg transform='translate(0.000000,382.000000) scale(0.100000,-0.100000)'%0Afill='%23409C2C' fill-opacity='0.08' stroke='none'%3E%3Cpath d='M0 1910 l0 -1910 3000 0 3000 0 0 1910 0 1910 -3000 0 -3000 0 0%0A-1910z m592 1750 c273 -84 408 -377 243 -529 -152 -140 -472 -66 -605 140 -76%0A118 -76 236 1 323 74 83 219 110 361 66z m-48 -814 c83 -41 176 -132 218 -213%0A58 -112 61 -137 59 -463 -2 -439 20 -627 96 -825 54 -142 96 -207 159 -245%0A120 -72 286 -108 418 -89 214 30 475 109 570 173 105 70 156 180 141 299 -16%0A125 -138 412 -262 618 -36 61 -63 112 -61 114 6 6 254 -162 323 -218 86 -70%0A300 -293 367 -381 183 -244 223 -381 147 -501 -66 -104 -290 -178 -619 -206%0A-156 -13 -469 -7 -670 11 -178 17 -347 65 -525 150 -256 121 -402 260 -550%0A519 -159 277 -246 638 -233 967 4 102 7 118 37 179 24 49 45 76 78 98 59 43%0A75 47 169 43 65 -2 93 -8 138 -30z m2106 8 c105 -13 275 -18 765 -23 627 -6%0A630 -6 687 -29 203 -82 337 -305 326 -542 -3 -63 -11 -99 -29 -140 l-25 -54%0A-32 46 c-43 63 -105 114 -171 140 -55 23 -61 23 -432 20 -416 -3 -463 2 -587%0A60 -135 63 -243 216 -280 396 l-17 82 -65 -6 c-421 -37 -763 -128 -885 -235%0A-81 -71 -114 -172 -95 -291 19 -124 135 -394 254 -592 36 -59 66 -112 66 -117%0A0 -12 -241 150 -335 226 -77 61 -287 280 -359 374 -63 81 -145 215 -162 264%0A-8 22 -14 71 -14 109 0 111 40 168 153 222 102 48 284 90 472 110 95 10 636%0A-4 765 -20z m2656 -11 c-3 -21 -16 -107 -28 -190 -13 -84 -26 -153 -31 -153%0A-4 0 -19 12 -32 28 l-24 27 -16 -23 c-97 -136 -299 -315 -515 -457 -128 -84%0A-290 -178 -296 -172 -2 2 60 59 138 128 301 263 480 460 539 594 l21 47 -48%0A49 c-26 27 -45 51 -42 55 8 7 307 102 327 103 10 1 12 -8 7 -36z m-654 -282%0Ac58 -64 138 -185 138 -209 0 -7 -30 -42 -67 -79 -72 -71 -81 -70 -82 3 -1 45%0A-47 196 -77 257 -15 29 -45 79 -68 112 -23 33 -46 66 -51 74 -20 34 152 -98%0A207 -158z m469 -296 c7 -47 10 -87 8 -89 -2 -2 -56 -39 -119 -81 -210 -140%0A-483 -257 -700 -300 -47 -9 -93 -19 -102 -21 -10 -3 -18 -1 -18 3 0 5 37 24%0A83 43 146 59 394 190 519 273 69 46 161 119 212 169 50 48 94 87 97 88 4 0 13%0A-38 20 -85z m-1321 -199 c0 -8 -36 -140 -79 -293 -44 -153 -83 -290 -86 -305%0Al-7 -28 280 0 c252 0 286 2 345 20 84 26 175 93 230 169 l42 59 95 22 c52 12%0A137 36 188 52 52 16 96 28 98 25 2 -2 0 -48 -6 -102 -40 -353 -215 -607 -496%0A-719 -178 -71 -155 -69 -831 -73 l-612 -4 9 28 c5 15 82 276 170 578 88 303%0A163 558 166 568 5 16 26 17 250 17 204 0 244 -2 244 -14z m1224 -101 c9 -35%0A16 -68 16 -73 0 -14 -144 -76 -255 -111 -205 -63 -426 -97 -737 -111 -257 -12%0A-268 -12 -268 0 0 6 19 10 43 10 72 0 284 29 439 60 250 50 523 152 678 254%0A30 19 58 36 61 36 4 0 14 -29 23 -65z m-1944 -1251 l0 -44 -85 0 -85 0 0 -230%0A0 -230 -50 0 -50 0 0 230 0 230 -85 0 -85 0 0 45 0 44 108 3 c59 2 158 2 220%0A0 l112 -3 0 -45z m-2680 -229 l0 -275 -50 0 -50 0 0 275 0 275 50 0 50 0 0%0A-275z m426 260 c27 -8 58 -20 68 -28 18 -13 18 -15 -3 -55 -12 -23 -23 -42%0A-25 -42 -2 0 -23 9 -47 19 -95 41 -180 33 -187 -18 -6 -36 24 -58 124 -91 123%0A-41 154 -73 154 -160 0 -52 -4 -64 -30 -94 -45 -50 -103 -70 -192 -64 -72 5%0A-136 28 -187 67 l-23 18 21 41 c12 23 24 42 26 42 3 0 23 -12 44 -26 104 -68%0A231 -62 231 11 0 33 -28 52 -125 85 -100 34 -140 65 -156 122 -19 74 15 139%0A91 172 45 20 152 20 216 1z m533 -15 c145 -81 107 -314 -57 -349 -29 -6 -84%0A-11 -122 -11 l-70 0 0 -80 0 -80 -50 0 -50 0 0 276 0 276 153 -4 c140 -3 155%0A-5 196 -28z m559 -5 c91 -50 142 -135 142 -239 0 -108 -48 -190 -141 -241 -49%0A-27 -62 -30 -149 -30 -78 0 -102 4 -135 22 -62 32 -121 103 -139 164 -33 109%0A-10 198 68 275 68 66 118 84 221 81 66 -3 90 -8 133 -32z m548 20 c84 -25 124%0A-82 124 -177 0 -64 -31 -132 -71 -155 -16 -10 -29 -20 -29 -23 0 -4 25 -42 55%0A-85 30 -44 55 -83 55 -88 0 -4 -26 -7 -57 -5 l-57 3 -46 77 -45 78 -72 0 -73%0A0 0 -80 0 -80 -50 0 -50 0 0 275 0 275 133 0 c89 0 150 -5 183 -15z m1006 -1%0Ac25 -8 65 -31 88 -51 119 -102 122 -309 6 -411 -65 -57 -96 -65 -263 -70%0Al-153 -4 0 276 0 276 138 0 c99 0 151 -4 184 -16z m641 -252 c64 -148 117%0A-272 117 -275 0 -4 -24 -7 -53 -7 l-54 0 -24 60 -24 61 -133 -3 -134 -3 -23%0A-55 -23 -55 -52 -3 c-47 -3 -52 -1 -48 15 3 10 56 134 119 276 l114 257 50 0%0A51 0 117 -268z m507 223 l0 -45 -85 0 -85 0 0 -230 0 -230 -50 0 -50 0 0 230%0A0 230 -85 0 -85 0 0 45 0 45 220 0 220 0 0 -45z m396 -220 c62 -143 114 -266%0A114 -272 0 -9 -17 -13 -50 -13 l-51 0 -26 60 -26 60 -132 0 -132 0 -24 -60%0A-24 -60 -52 0 c-29 0 -53 2 -53 5 0 5 228 524 236 537 3 5 28 8 56 6 l51 -3%0A113 -260z'/%3E%3Cpath d='M1110 565 l0 -105 53 0 c126 1 187 35 187 103 0 71 -57 107 -170 107%0Al-70 0 0 -105z'/%3E%3Cpath d='M1692 649 c-140 -70 -140 -260 1 -328 98 -48 208 -4 252 101 20 49%0A19 84 -4 133 -22 48 -54 79 -103 100 -51 21 -95 19 -146 -6z'/%3E%3Cpath d='M2250 564 l0 -107 83 5 c45 3 94 11 108 18 50 23 68 94 36 144 -21%0A31 -71 46 -159 46 l-68 0 0 -106z'/%3E%3Cpath d='M3250 486 l0 -186 73 0 c77 1 136 17 169 47 65 59 77 178 24 247 -40%0A53 -78 69 -178 74 l-88 4 0 -186z'/%3E%3Cpath d='M3937 623 c-7 -11 -87 -195 -87 -200 0 -2 41 -3 90 -3 50 0 90 4 90%0A8 0 8 -79 194 -85 200 -2 2 -5 -1 -8 -5z'/%3E%3Cpath d='M4798 529 l-46 -109 94 0 93 0 -45 107 c-24 59 -45 108 -47 109 -1 1%0A-23 -47 -49 -107z'/%3E%3C/g%3E%3C/svg%3E%0A\") no-repeat center center fixed;background-size:cover;z-index:100}.logo.svelte-1fea0lf{left:0;width:80px;height:34px;transition:all 0.3s;transform-origin:50% 50%}.head.svelte-1fea0lf{color:#636363;font-size:17px;font-weight:500}.caprght.svelte-1fea0lf{position:absolute;left:10%}.capleft.svelte-1fea0lf{position:absolute;left:2%}.active.svelte-1ishgnu{background-image:linear-gradient(#409C2C 95%, rgb(188, 247, 105) 10%)}.active.svelte-1ishgnu{background-image:linear-gradient(#409C2C 95%, rgb(188, 247, 105) 10%)}\n  </style>\n</svelte:head>\n<Dropdown/>\n{#if input}\n\t <!-- content here -->\n\t {#each input as item}\n\t\t  <!-- content here -->\n      {#if item.race_no == $race[ $race.indexOf($currentRace)]}\n      <Table tableData={item.odds_compare} raceNum={item.race_no} startTime={item.start_time}></Table>\t\n      {/if}\n\t<!-- <Table tableData={item.odds_compare}></Table>\t -->\n\t {/each}\n\n {/if}\n\n <style>\n  :global(.bGroup){\n      top:0%;\n      left:50%;\n        transform: translate(-50%,140%);\n        z-index: 1;\n  }\n\n  :global(.bGroup2){\n      top:50%;\n      left:89%;\n        transform: translate(0%,20%);\n        z-index: 1;\n        max-width: 200px;\n  }\n\n  \n  :global(.bGroup3){\n      top:5%;\n    left:11%;\n        transform: translate(0%,0%);\n        z-index: 1;\n        max-width: 200px;\n        z-index: 2;\n  }\n\n\n :global(.numB) {\nbackground-color:        #409C2C;\n  }\n\n\n\n\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n    target: document.querySelector('#odds-compare')\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","select_option","select","option","__value","selected","selectedIndex","active_docs","current_component","active","delete_rule","previous","animation","split","next","filter","anim","indexOf","deleted","join","doc","stylesheet","__svelte_stylesheet","cssRules","deleteRule","__svelte_rules","clear","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","add","fragment","before_update","dirty","p","ctx","after_update","promise","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","duration","create_in_transition","params","animation_name","config","running","uid","cleanup","go","delay","easing","tick","css","ease","step","keyframes","t","rule","str","hash","charCodeAt","sheet","current_rules","insertRule","create_rule","start_time","end_time","abort","fulfill","loop","started","start","then","invalidate","end","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","keys","exports","crossfilter_identity","permute","array","n","copy","crossfilter","version","bisect","bisect_by","bisectRight","lo","hi","mid","right","left","heap_by","heap","sift","child","sort","heapselect_by","k","min","queue","Math","insertionsort_by","j","quicksort_by","insertionsort","quicksort_sizeThreshold","quicksort","sixth","i1","i5","i3","i2","i4","e1","x1","e2","x2","e3","x3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","by","heapselect","crossfilter_array8","crossfilter_arrayUntyped","crossfilter_array16","crossfilter_array32","crossfilter_arrayLengthen","crossfilter_arrayWiden","width","Error","crossfilter_filterExact","values","crossfilter_filterRange","range","max","crossfilter_filterAll","crossfilter_null","crossfilter_zero","crossfilter_reduceIncrement","crossfilter_reduceDecrement","crossfilter_reduceAdd","v","crossfilter_reduceSubtract","remove","removeData","dimension","groupAll","M","filters","filterListeners","dataListeners","removeDataListeners","newData","n0","n1","concat","newIndex","crossfilter_index","removed","newValues","refilterFunction","filterAll","isArray","filterRange","filterFunction","filterExact","top","hi0","lo0","bottom","group","g","all","order","orderNatural","dispose","one","zero","refilter","indexListeners","dimensionGroups","preAdd","crossfilter_range","bounds","lo1","hi1","oldValues","oldIndex","i0","postAdd","reIndex","filterIndexBounds","filterIndexFunction","added","key","reduce","reduceCount","reduceSum","groups","groupIndex","reduceAdd","reduceRemove","reduceInitial","groupWidth","groupCapacity","crossfilter_capacity","reset","resetNeeded","g0","x0","oldGroups","initial","k0","groupIncrement","updateMany","resetMany","updateOne","resetOne","oldK","seenGroups","filterOne","valueOf","arguments","unshift","reduceValue","w","Uint8Array","Uint16Array","Uint32Array","constructor","set","require$$0","ndx","pivotCol","column","pivotVal","pivotRow","row","out","pivotRowDimension","pivotColDimension","rec","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","race","currentRace","oddsCal","calDate","cubicInOut","pow","blur","amount","opacity","getComputedStyle","target_opacity","od","_t","u","at","raceNo","toFixed","tableData","raceNum","startTime","console","log","output","jsonToPivotjson","hrs_no","horse_no","horse","jockey","weight","race_date","rd_options","response","fetch","headers","APP_USER","tData","json","items","getData","selected_option","querySelector","odds_compare","race_no","input","calendarDate","undefined","rc"],"mappings":"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"}